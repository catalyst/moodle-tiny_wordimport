{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Options helper for the Moodle tiny_wordimport plugin.\n *\n * @module      plugintype_pluginname/options\n * @copyright   2023 Andr√© Menrath <andre.menrath@uni-graz.at>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {\n    getContextId,\n    getPluginOptionName,\n} from 'editor_tiny/options';\n\nimport {pluginName} from './common';\n\n// Helper variables for the option names.\nconst heading1StyleLevelName = getPluginOptionName(pluginName, 'heading1StyleLevel');\n\n/**\n * Options registration function.\n *\n * @param {tinyMCE} editor\n */\nexport const register = (editor) => {\n    const registerOption = editor.options.register;\n\n    // For each option, register it with the editor.\n    // Valid type are defined in https://www.tiny.cloud/docs/tinymce/6/apis/tinymce.editoroptions/\n    registerOption(heading1StyleLevelName, {\n        processor: 'int',\n    });\n\n    // // Add .docx to the allowed file types.\n    // registerOption(filePickers, {\n    //     processor: 'object',\n    //     \"default\": {},\n    // });\n    // setOption(filePickers, filepicker);\n};\n\n/**\n * Fetch the heading1StyleLevel value for this editor instance.\n *\n * @param {tinyMCE} editor The editor instance to fetch the value for\n * @returns {object} The value of the heading1StyleLevel option\n */\nexport const getHeading1StyleLevel = (editor) => editor.options.get(heading1StyleLevelName);\n\n\nconst permissionsName = getPluginOptionName('tiny_media/plugin', 'permissions');\n\n/**\n * Get the permissions configuration for the Tiny Word Import plugin.\n *\n * @param {TinyMCE} editor\n * @returns {object}\n */\nexport const getEmbedPermissions = (editor) => editor.options.get(permissionsName);\n\nexport {\n    getContextId\n};\n"],"names":["heading1StyleLevelName","pluginName","editor","registerOption","options","register","processor","get","permissionsName"],"mappings":";;;;;;;;MA+BMA,wBAAyB,gCAAoBC,mBAAY,wCAOtCC,UAKrBC,EAJuBD,OAAOE,QAAQC,UAIvBL,uBAAwB,CACnCM,UAAW,wCAiBmBJ,QAAWA,OAAOE,QAAQG,IAAIP,8BAG9DQ,iBAAkB,gCAAoB,oBAAqB,4CAQ7BN,QAAWA,OAAOE,QAAQG,IAAIC"}